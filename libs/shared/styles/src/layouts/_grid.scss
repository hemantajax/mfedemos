/**
 * LAYOUTS - Grid System
 * Principle: Flexible and responsive layout system
 * Principle: Low specificity with semantic naming
 */

.grid {
  display: grid;
  gap: var(--spacing-4);

  &--cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }

  &--cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }

  &--cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }

  &--cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }

  &--cols-auto {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  // Gap variations
  &--gap-sm {
    gap: var(--spacing-2);
  }

  &--gap-lg {
    gap: var(--spacing-6);
  }
}

// Responsive grid utilities
@each $breakpoint, $width in $breakpoints {
  @if $width > 0 {
    @include respond-to($breakpoint) {
      @for $i from 1 through 4 {
        .grid--cols-#{$i}\@#{$breakpoint} {
          grid-template-columns: repeat($i, 1fr);
        }
      }
    }
  }
}

// Flex layout
.flex {
  display: flex;

  &--column {
    flex-direction: column;
  }

  &--row {
    flex-direction: row;
  }

  &--wrap {
    flex-wrap: wrap;
  }

  &--center {
    @include flex-center;
  }

  &--between {
    @include flex-between;
  }

  &--start {
    justify-content: flex-start;
  }

  &--end {
    justify-content: flex-end;
  }

  &--gap {
    gap: var(--spacing-4);
  }

  &--gap-sm {
    gap: var(--spacing-2);
  }

  &--gap-lg {
    gap: var(--spacing-6);
  }
}
